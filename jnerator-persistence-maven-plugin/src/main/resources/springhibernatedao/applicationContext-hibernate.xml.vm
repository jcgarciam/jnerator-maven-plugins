<?xml version="1.0" encoding="UTF-8"?>

<!-- This file has been generated by ${generatorVersion} at $date -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
#foreach($jdoInfo in ${jdoInfos})		
				<value>${pckName}.pojo.${jdoInfo.javaClassName}</value>
#if ($util.getLength($jdoInfo.getPk()) > 1)
				<value>${pckName}.pojo.${jdoInfo.javaClassName}\$${jdoInfo.javaClassName}PK</value>
#end
#end				
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
#if (${hibernateDialectHelper.getHibernateDialect(${connInfo.conn.getMetaData()})})
				<!-- Your database is ${connInfo.conn.getMetaData().getDatabaseProductName()} ${connInfo.conn.getMetaData().getDatabaseMajorVersion()}.${connInfo.conn.getMetaData().getDatabaseMinorVersion()} -->
				<prop key="hibernate.dialect">${hibernateDialectHelper.getHibernateDialect(${connInfo.conn.getMetaData()})}</prop>
#if (${connInfo.conn.getMetaData().getDatabaseProductName()}=="MySQL" && ${connInfo.conn.getMetaData().getDatabaseMajorVersion()}>=5)
				<!-- You can also use org.hibernate.dialect.MySQL5InnoDBDialect if all your tables are InnoDBs.-->
	
#else
				<!-- You can also use org.hibernate.dialect.MySQLInnoDBDialect if all your tables are InnoDBs or org.hibernate.dialect.MySQLMyISAMDialect if all your tables are MyISAMs.-->

#end
#else
				<!-- Your database is ${connInfo.conn.getMetaData().getDatabaseProductName()}. No dialect is known by Salto-db-generator for this database.
				     If you know what dialect to use, please send an email to rflament@salto-consulting.com and precise that the database is
				     "${connInfo.conn.getMetaData().getDatabaseProductName()}". Thank you.
				-->
				<prop key="hibernate.dialect"> SET THE DATABASE DIALECT HERE </prop>
#end		
				<prop key="hibernate.query.substitutions">Y</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- Turn batching off for better error messages under PostgreSQL 
					<prop key="hibernate.jdbc.batch_size">0</prop> -->
			</props>
		</property>
	</bean>


	<bean id="myHibernateInterceptor"
		class="org.springframework.orm.hibernate3.HibernateInterceptor">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
#foreach($jdoInfo in ${jdoInfos})

	<bean id="${util.DoNameCreator.class2attribute(${jdoInfo.javaClassName})}DAO" class="${pckName}.hibernate.${jdoInfo.javaClassName}HibernateDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
#end	

</beans>
